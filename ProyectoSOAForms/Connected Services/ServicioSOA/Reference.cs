//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoSOAForms.ServicioSOA {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Localhost/", ConfigurationName="ServicioSOA.PersonasSoap")]
    public interface PersonasSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/BuscaRegistro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscaRegistro(string cadena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/BuscaRegistro", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscaRegistroAsync(string cadena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/NuevoRegistro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object NuevoRegistro(string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/NuevoRegistro", ReplyAction="*")]
        System.Threading.Tasks.Task<object> NuevoRegistroAsync(string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/ActualizarRegistro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object ActualizarRegistro(int ID, string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/ActualizarRegistro", ReplyAction="*")]
        System.Threading.Tasks.Task<object> ActualizarRegistroAsync(int ID, string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/EliminaRegistro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object EliminaRegistro(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/EliminaRegistro", ReplyAction="*")]
        System.Threading.Tasks.Task<object> EliminaRegistroAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Localhost/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PersonasSoapChannel : ProyectoSOAForms.ServicioSOA.PersonasSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonasSoapClient : System.ServiceModel.ClientBase<ProyectoSOAForms.ServicioSOA.PersonasSoap>, ProyectoSOAForms.ServicioSOA.PersonasSoap {
        
        public PersonasSoapClient() {
        }
        
        public PersonasSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonasSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonasSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonasSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet BuscaRegistro(string cadena) {
            return base.Channel.BuscaRegistro(cadena);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscaRegistroAsync(string cadena) {
            return base.Channel.BuscaRegistroAsync(cadena);
        }
        
        public object NuevoRegistro(string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO) {
            return base.Channel.NuevoRegistro(NOMBRE, APELLIDO, DIRECCION, CIUDAD, TELEFONO);
        }
        
        public System.Threading.Tasks.Task<object> NuevoRegistroAsync(string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO) {
            return base.Channel.NuevoRegistroAsync(NOMBRE, APELLIDO, DIRECCION, CIUDAD, TELEFONO);
        }
        
        public object ActualizarRegistro(int ID, string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO) {
            return base.Channel.ActualizarRegistro(ID, NOMBRE, APELLIDO, DIRECCION, CIUDAD, TELEFONO);
        }
        
        public System.Threading.Tasks.Task<object> ActualizarRegistroAsync(int ID, string NOMBRE, string APELLIDO, string DIRECCION, string CIUDAD, string TELEFONO) {
            return base.Channel.ActualizarRegistroAsync(ID, NOMBRE, APELLIDO, DIRECCION, CIUDAD, TELEFONO);
        }
        
        public object EliminaRegistro(int ID) {
            return base.Channel.EliminaRegistro(ID);
        }
        
        public System.Threading.Tasks.Task<object> EliminaRegistroAsync(int ID) {
            return base.Channel.EliminaRegistroAsync(ID);
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
    }
}
